{"version":3,"sources":["images/Form.svg","images/Checkbox.svg","components/Checkbox/checkbox.js","components/NameField/nameField.js","components/Password/passwordFiled.js","components/ConfirmPassword/confirmPassword.js","components/email/emailInput.js","components/WebsiteInput/websiteInput.js","components/AgeInput/ageInput.js","components/SkillsInput/skillsInput.js","components/Form/form.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Checkbox","props","error","touched","checked","onChange","className","Label","htmlFor","type","id","styled","label","checkedImage","notChecked","NameInput","value","maxLength","PasswordInput","ConfirmPassword","EmailInput","response","WebsiteInput","AgeInput","SkillsInput","onClick","skills","map","el","idx","key","htmlType","MyForm","request","formik","useFormik","initialValues","name","password","confirmPassword","email","website","age","acceptTerms","serverResponse","validationSchema","Yup","required","matches","message","oneOf","url","min","max","onSubmit","data","reduce","a","b","length","push","dataJson","JSON","stringify","setFieldValue","console","log","values","skillsChange","i","event","target","skillsFieldAdd","newSkills","handleSubmit","handleChange","errors","App","cb","fetch","headers","method","body","res","text","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.facade78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Form.74238712.svg\";","module.exports = __webpack_public_path__ + \"static/media/Checkbox.fc4db7ee.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport notChecked from '../../images/Form.svg';\r\nimport checkedImage from '../../images/Checkbox.svg';\r\nimport '../App/App.css';\r\nimport './checkbox.css';\r\n\r\nconst Checkbox = (props) => {\r\n    const {error, touched, checked, onChange} = props;\r\n    return (\r\n        <div className=\"input\">\r\n            {touched && error ? <div className=\"redError\">{error}</div> : null}\r\n            <Label checked={checked}\r\n                htmlFor=\"acceptTerms\"\r\n                   className=\"checkbox-label\">\r\n                Accept Terms\r\n            </Label>\r\n            <input type=\"checkbox\"\r\n                   className=\"input-checkbox\"\r\n                   id=\"acceptTerms\"\r\n                   onChange={onChange}\r\n                   checked={checked}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox;\r\n\r\nconst Label = styled.label`\r\n&:before{\r\ncontent: '';\r\ndisplay:inline-block;\r\nposition: relative;\r\ntop: 3px;\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\nbackground-image: ${props=>props.checked?`url(${checkedImage})`:`url(${notChecked})`};\r\n}\r\n`","import React from \"react\";\r\nimport {Input} from \"antd\";\r\nimport '../errors/errors.css';\r\nimport '../App/App.css'\r\n\r\nconst NameInput = (props) => {\r\n    const {onChange, value, touched, error} = props;\r\n\r\n    return (\r\n        <div className=\"input\">\r\n        <label htmlFor=\"name\"\r\n        className=\"input-label\">\r\n            {touched && error ? <div className=\"redError\">{error}</div> : null}\r\n            <Input\r\n                className=\"input-field\"\r\n                id=\"name\"\r\n                maxLength={50}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            Name\r\n        </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameInput;","import React from \"react\";\r\nimport {Input} from \"antd\";\r\nimport './passwordFiled.css'\r\nimport '../errors/errors.css'\r\n\r\nconst PasswordInput = (props) => {\r\n    const {value, onChange, error, touched} = props;\r\n    return (\r\n        <div className=\"input\">\r\n            {touched && error ? <div className=\"redError\">{error}</div> : null}\r\n        <label htmlFor=\"password\"\r\n        className=\"input-label\">\r\n            <Input\r\n                className=\"input-field\"\r\n                id=\"password\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            Password*\r\n        </label>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PasswordInput;","import React from 'react';\r\nimport {Input} from \"antd\";\r\nimport '../errors/errors.css';\r\nimport '../App/App.css'\r\n\r\nconst ConfirmPassword = (props) => {\r\n    const {onChange, value, error, touched} = props;\r\n    return (\r\n        <div className=\"input\">\r\n            {error && touched ? <div className=\"redError\">{error}</div> : null}\r\n            <label htmlFor=\"confirmPassword\"\r\n            className=\"input-label\">\r\n                <Input\r\n                    className=\"input-field\"\r\n                    value={value}\r\n                    id=\"confirmPassword\"\r\n                    onChange={onChange}\r\n                />\r\n                Confirm Password\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmPassword;","import React from \"react\";\r\nimport {Input} from \"antd\";\r\nimport '../errors/errors.css'\r\nimport '../App/App.css'\r\n\r\nconst EmailInput = (props) => {\r\n    const {touched, value, onChange, error, response} = props;\r\n    return (\r\n        <div className=\"input\">\r\n            {response==='err'?<div className=\"redError\">Email already exist, enter another one</div>:null }\r\n            {touched && error?<div className=\"redError\">Invalid email address</div>:null}\r\n            <label htmlFor=\"email\"\r\n            className=\"input-label\">\r\n                <Input id=\"email\"\r\n                       className=\"input-field\"\r\n                       onChange={onChange}\r\n                       value={value}\r\n                />\r\n                Email\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailInput;","import React from 'react';\r\nimport {Input} from \"antd\";\r\nimport '../errors/errors.css';\r\nimport '../App/App.css'\r\nconst WebsiteInput = (props) => {\r\n    const {value, touched, error, onChange} = props;\r\n    return (\r\n        <div className=\"input\">\r\n            {touched && error ? <div className=\"redError\">{error}</div> : null}\r\n            <label htmlFor=\"website\"\r\n            className=\"input-label\">\r\n                <Input id=\"website\"\r\n                       className=\"input-field\"\r\n                       value={value}\r\n                       onChange={onChange}\r\n                />\r\n                Website\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebsiteInput;","import React from 'react';\r\nimport {Input} from \"antd\";\r\nimport '../errors/errors.css';\r\nimport '../App/App.css'\r\n\r\nconst AgeInput = (props) => {\r\n    const {value, touched, error, onChange} = props;\r\n    return (\r\n        <div className=\"input\">\r\n            <label htmlFor=\"age\"\r\n            className=\"input-label\">\r\n                {touched && error ? <div className=\"redError\">{error}</div> : null}\r\n                <Input id=\"age\"\r\n                       className=\"input-field\"\r\n                       value={value}\r\n                       onChange={onChange}\r\n                />\r\n                Age\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgeInput;","import React from \"react\";\r\nimport {Button, Input} from \"antd\";\r\nimport '../App/App.css';\r\nimport './skillsInput.css';\r\n\r\nconst SkillsInput = (props) => {\r\nconst {onClick, onChange, skills}=props;\r\n\r\n  return (\r\n      <div className=\"skillsInput-container\">\r\n          <div className=\"skillsInput-leftColumn\">\r\n      {skills.map((el, idx) => {\r\n        return (\r\n            <div key={idx} className=\"input\">\r\n                <label className=\"input-label\"\r\n                    htmlFor={idx}>\r\n                    <Input\r\n                        className=\"input-field\"\r\n                        onChange={onChange(idx)}\r\n                        id={idx}\r\n                    />\r\n                    Skill\r\n                </label>\r\n            </div>\r\n        )\r\n    })}\r\n          </div>\r\n          <div>\r\n              <Button\r\n                  className=\"skillsButton\"\r\n                  onClick={onClick}\r\n                  htmlType='button'>\r\n                  + Add Skills Field\r\n              </Button>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SkillsInput;","import React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport {useFormik} from \"formik\";\r\nimport {Button} from \"antd\";\r\nimport Checkbox from \"../Checkbox/checkbox\";\r\nimport NameInput from \"../NameField/nameField\";\r\nimport PasswordInput from \"../Password/passwordFiled\";\r\nimport ConfirmPassword from \"../ConfirmPassword/confirmPassword\";\r\nimport EmailInput from \"../email/emailInput\";\r\nimport WebsiteInput from \"../WebsiteInput/websiteInput\";\r\nimport AgeInput from \"../AgeInput/ageInput\";\r\nimport SkillsInput from \"../SkillsInput/skillsInput\";\r\nimport './form.css';\r\nimport '../App/App.css';\r\n\r\nconst MyForm = (props) => {\r\n    const {request} = props;\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n            website: '',\r\n            age: '',\r\n            skills: [{value: ''}],\r\n            acceptTerms: false,\r\n            serverResponse: ''\r\n\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                .required('Required'),\r\n            password: Yup.string()\r\n                .matches(`^(?=.*[A-Z])(?=.*[0-9])(.*[a-zA-Z]).{8,40}$`, {message: \"Invalid look to *\"})\r\n                .required(\"Required\"),\r\n            confirmPassword: Yup.string()\r\n                .oneOf([Yup.ref('password')], \"dont match\")\r\n                .required(\"Required\"),\r\n            email: Yup.string()\r\n                .email('Invalid email address')\r\n                .required('Required'),\r\n            website: Yup.string().url(\"Website address invalid\"),\r\n            age: Yup.number().min(18, \"too young\")\r\n                .max(65, \"too old\")\r\n                .required(\"Required\"),\r\n            acceptTerms: Yup.boolean(true).oneOf([true], \"Required\")\r\n        }),\r\n        onSubmit: ({name, password, email, website, age, skills}) => {\r\n            const newSkills = skills.reduce((a, b) => {\r\n                if (b.value.length > 0) {\r\n                    a.push(b.value)\r\n                    return a\r\n                }\r\n            }, []);\r\n            const data = {name, password, email, website, age, skills: newSkills}\r\n            const dataJson = JSON.stringify(data);\r\n            request(dataJson, formik.setFieldValue);\r\n            console.log(formik.values)\r\n\r\n        }\r\n    });\r\n    const skillsChange = (i) => (event) => {\r\n        const {value} = event.target\r\n        const {skills} = formik.values;\r\n        formik.setFieldValue(`skills[${i}].value`, value);\r\n    }\r\n    const skillsFieldAdd = () => {\r\n        const {skills} = formik.values;\r\n        const newSkills = [...skills, {value: ''}]\r\n        formik.setFieldValue(`skills`, newSkills);\r\n    }\r\n    const formRender = () => {\r\n        return (\r\n            <form onSubmit={formik.handleSubmit}\r\n                  className=\"form\">\r\n                <NameInput\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.name}\r\n                    touched={formik.touched.name}\r\n                    error={formik.errors.name}\r\n                />\r\n                <PasswordInput\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    touched={formik.touched.password}\r\n                    error={formik.errors.password}\r\n                />\r\n                <ConfirmPassword\r\n                    value={formik.values.confirmPassword}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.confirmPassword}\r\n                    touched={formik.touched.confirmPassword}\r\n                />\r\n                <EmailInput\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.email}\r\n                    touched={formik.touched.email}\r\n                    response={formik.values.serverResponse}\r\n                />\r\n                <WebsiteInput\r\n                    value={formik.values.website}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.website}\r\n                    touched={formik.touched.website}\r\n                />\r\n                <AgeInput\r\n                    value={formik.values.age}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.errors.age}\r\n                    touched={formik.touched.age}\r\n                />\r\n                <SkillsInput\r\n                onClick={skillsFieldAdd}\r\n                onChange={skillsChange}\r\n                skills={formik.values.skills}\r\n                />\r\n                <div>*Minimum eight characters, at least one uppercase letter and one number</div>\r\n              <Checkbox\r\n              error={formik.errors.acceptTerms}\r\n              touched={formik.touched.acceptTerms}\r\n              checked={formik.values.acceptTerms}\r\n              onChange={formik.handleChange}\r\n              />\r\n              <div className=\"submitButton-container\">\r\n                <Button className=\"submitButton\"\r\n                    htmlType='submit'\r\n                >Submit\r\n                </Button>\r\n              </div>\r\n            </form>\r\n        )\r\n    }\r\n    return (\r\n        formik.values.serverResponse === 'ok' ? <div className=\"succesfull\">Registration Successfull</div> : formRender()\r\n    )\r\n}\r\n\r\nexport default MyForm;","import React from 'react';\nimport MyForm from \"../Form/form\";\nimport './App.css'\n\nclass App extends React.Component {\n\n    request = async (data, cb) => {\n        const res = await fetch('http://192.168.0.103:3000/', {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: data\n        });\n        const response = await res.text();\n      await  cb('serverResponse', response);\n    }\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <MyForm request={this.request}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/components/App/App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n      <div className=\"app-container\">\n    <App />\n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}